@{
    ViewData["Title"] = "Models";
}

<div id="form" class="dx-swatch-Datagrid_White" style="overflow-y: hidden; overflow-x: hidden">
    <!-- <div id="form" style="overflow-y: hidden; overflow-x: hidden"> -->
    @(
        Html.DevExtreme().DataGrid<ProDat.Web2.Models.SuperClass>()
                        .ID("Models")
                        .Height(1150)
                        //.Width()
                        .DataSource(ds => ds.Mvc()
                        .Controller("SuperClass")
                        .LoadAction("Models_GetData")
                        .InsertAction("Models_Insert")
                        .UpdateAction("Models_Update")
                        .DeleteAction("Models_Delete")
                        .Key("SuperclassID")
                        )
                        .Editing(editing =>
                        {
                            editing.Mode(GridEditMode.Cell);
                            editing.AllowUpdating(true);
                            editing.AllowAdding(true);
                            editing.AllowDeleting(true);
                        })
                        .Selection(s => s.Mode(SelectionMode.Multiple))
                        .Export(e => e.Enabled(true).AllowExportSelectedData(true))
                        .OnExporting("exporting")
                        .RemoteOperations(false)
                        .AllowColumnReordering(true)
                        .RowAlternationEnabled(true)
                        .ShowBorders(true)
                        .FilterRow(f => f.Visible(true))
                        .CustomizeColumns("ignoreIDValidation")

                        //Do not need column chooser because there are not many columns
                        //.ColumnChooser(c => c.Enabled(true))
                        .ColumnFixing(c => c.Enabled(true))
                        .ColumnResizingMode(ColumnResizingMode.Widget)
                        .AllowColumnResizing(true)
                        .SearchPanel(s => s
                        .Visible(true)
                        .HighlightCaseSensitive(true)
                        )

                        //.GroupPanel(g => g.Visible(true))
                        .Grouping(g => g.AutoExpandAll(false))
                        .Scrolling(s => s.Mode(GridScrollingMode.Virtual))
                        .Paging(p => p.PageSize(45))

                        //.OnCellPrepared("DataGrid_OnCellPrepared")
                        .Columns(columns =>
                        {
                        columns.AddFor(x => x.SuperclassID).Visible(false);

                        columns.AddFor(x => x.SuperclassName);

                        columns.AddFor(x => x.Superclassdescription);



                        }



        )
        )
</div>

<!-- UI structure to test SAP Validations -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/3.3.1/exceljs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.4.0/polyfill.min.js"></script>

<!-- Lookup functions -->


<!-- context menu management & export to excel -->
<script>
    // Export to excel.
    function exporting(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('ProDat Models');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            // https://github.com/exceljs/exceljs#writing-xlsx
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Models.xlsx');
            });
        });
        e.cancel = true;
    }</script>

<script>
    function ignoreIDValidation(columns) {
        columns[0].validationRules = null;
    }</script>
